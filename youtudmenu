#!/bin/sh

SEARCH_PROMPT="YTSearch:"

# Get query
query=""

# Check for X
if [ "${DISPLAY}" ]; then
    query=$(dmenu -p "${SEARCH_PROMPT}" </dev/null | tr ' ' '+')
else
    read -r -p "${SEARCH_PROMPT} " query
    query=$(printf "%s\n" "${query}" | tr ' ' '+')
fi

if [ "$query" ]; then
    # sp - Filter: Only videos
    # hl - Language: English (US)
    # gl - Content location: US
    # Get the results
    results="$(curl -s "https://www.youtube.com/results" \
        -G -d "search_query=${query}" \
        -d "sp=EgIQAQ%253D%253D" -d "hl=EN" -d "gl=US")"

    # Extract JSON with video metadata
    data="$(printf "%s\n" "${results}" | tr '\n' ' ' | \
        grep -Po 'var ytInitialData.*?</script>' | sed 's/^[^{]*//;s/[^}]*$//')"

    # Get a list of json objects with titles and video ids
    videos_data="$(printf "%s\n" "${data}" | jq '
        .["contents"] ["twoColumnSearchResultsRenderer"]["primaryContents"]
        ["sectionListRenderer"]["contents"][0]
        ["itemSectionRenderer"]["contents"][]["videoRenderer"]
            | { "id": .["videoId"], "title": .["title"]["runs"][0]["text"] }')"

    # Combile ids and titles
    videos="$(printf "%s\n" "${videos_data}" | jq -r '.["id"] + " " + .["title"]')"

    # Choose one
    video_id=""
    if [ "${DISPLAY}" ]; then
        video_id="$(printf "%s" "${videos}" | dmenu -l 10 | cut -d' ' -f1)"
    else
        video_id="$(printf "%s" "${videos}" | fzf | cut -d' ' -f1)"
    fi

    # If selected a video, print its id and play it
    if [ "${video_id}" ]; then
        printf "ID: %s\n" "${video_id}"

        if [ "${DISPLAY}" ]; then
            mpv "https://www.youtube.com/watch?v=${video_id}"
        else
            mpv --video=no "https://www.youtube.com/watch?v=${video_id}"
        fi
    fi
fi
